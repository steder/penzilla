# Makes SWIGed Python module 

# Rodrigo Caballero Augi (rca@geosci.uchicago.edu), 
# Department of the Geophysical Sciences, University of Chicago
# 2003

name := NumPtr

ifeq ($(MAKELEVEL),0)

 OS := $(shell uname -s)
 IM := 1
 KM := 18

 ifeq ($(OS),Linux)
    CC            := pgcc
    FC            := pgf90
    F90           := pgf90
    FFLAGS_SHARED := -r8 -Mextend
    FCFLAGS       := $(FFLAGS_SHARED) 
    F90FLAGS      := $(FFLAGS_SHARED) 
    LDFLAGS       := -Mnomain -shared
    SWIG          := /home/rca/bin/swig
    PYTHONINC     := /usr/include/python2.2 
 endif

 ifeq ($(OS),Darwin)
    CC            := gcc
    FC            := xlf
    F90           := xlf90
    FFLAGS_SHARED := -O3 -qautodbl=dbl -qextname -qsource \
                     -qarch=auto -qtune=auto -qcache=auto -qstrict \
    FCFLAGS       := -qsuffix=f=f:cpp=F -qfixed=132 $(FFLAGS_SHARED) 
    F90FLAGS      := -qsuffix=f=f90:cpp=F90 -qfree=f90 $(FFLAGS_SHARED) 
    LDFLAGS       := -L/opt/ibmcmp/xlsmp/1.3/lib \
                     -L/opt/ibmcmp/xlf/8.1/lib \
                     -L/opt/ibmcmp/xlsmp/1.3/../../lib \
                     -L/opt/ibmcmp/xlf/8.1/../../lib \
                     -dynamic -lxlf90 -lxlopt -lxlomp_ser -lxl \
                     -lxlfmath -lm -lc -lgcc -lSystem \
                     -bundle -flat_namespace -undefined suppress
    SWIG          := /usr/local/bin/swig
    PYTHONINC     := /sw/include/python2.2 
  endif
endif

# local flags
INCLUDE   := -I./include -I./src
FCFLAGS   := $(FCFLAGS) $(INCLUDE) 
F90FLAGS  := $(F90FLAGS) $(INCLUDE) 
CPPFLAGS  := -DALPHA -DPLON=$(IM) -DPLEV=$(KM) -DPLEVR=$(KM)
ifeq ($(OS),Darwin)
 empty     =
 comma     = ,
 space     = $(empty) $(empty)
 CPPFLAGS  := -WF,$(subst $(space),$(comma),$(strip $(CPPFLAGS)))
endif

# compilation rules
%.o : %.c
	$(CC) -c -I$(PYTHONINC) -o $@ $<

%.o : %.f
	$(FC) $(FCFLAGS) -c -o $@ $<

%.o : %.F
	$(FC) $(FCFLAGS) $(CPPFLAGS) -c -o $@ $<

%.o : %.f90
	$(F90) $(F90FLAGS) -c -o $@ $<

# sources and objects
SRC := $(wildcard *.f *.c *.F src/*.F)
OBJ := $(SRC:.f=.o)
OBJ := $(OBJ:.c=.o)
OBJ := $(OBJ:.F=.o)
ifeq (,$(findstring $(name)_wrap.o,$(OBJ)))
 wrapper := $(name)_wrap.o
endif

_$(name).so :  $(OBJ) $(name)_wrap.o
ifeq ($(OS),Linux)
	$(F90) $(LDFLAGS) -o $@  $(OBJ) $(wrapper)
endif
ifeq ($(OS),Darwin)
	gcc  $(LDFLAGS) -o $@ $(OBJ) $(wrapper) 
endif

$(name)_wrap.o: $(name).i
	$(SWIG) -python $(name).i
	$(CC) -c -I$(PYTHONINC) -o $(name)_wrap.o $(name)_wrap.c
	rm -f $(name).py
clean:
	rm -f $(OBJ) *.so *_wrap.* *.pyc *_lib.* *.lst 

test: _$(name).so 
	python test.py
